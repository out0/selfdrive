#IMG-NAME: driveless-dev-cuda-img
FROM nvidia/cuda:12.2.2-cudnn8-devel-ubuntu20.04

SHELL ["/bin/bash", "-c"]
ENV TZ=America/Sao_Paulo
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN rm /etc/apt/sources.list.d/*
RUN apt-key del 7fa2af80
RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/3bf863cc.pub

RUN apt-get update
RUN apt-get install -y apt-utils
RUN apt-get dist-upgrade -y

RUN apt-get install -y build-essential pkg-config \
    libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
    libxvidcore-dev libx264-dev libjpeg-dev libpng-dev libtiff-dev \
    gfortran openexr libatlas-base-dev python3-dev \
    libopenexr-dev cmake \
    libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev \
    sudo libgtk2.0-dev wget git pkg-config libssl-dev openssl


RUN apt-get autoremove && apt-get clean

# Latest version of the CMake
RUN mkdir -p /tf
RUN cd /tf && wget https://github.com/Kitware/CMake/releases/download/v3.29.4/cmake-3.29.4.tar.gz && tar xvf cmake-3.29.4.tar.gz
RUN mkdir -p /tf/cmake-3.29.4/build && cd /tf/cmake-3.29.4/build && cmake ../ && make -j$(nproc) && make install
RUN rm -rf /tf


RUN cd /tf/opencv/build && make -j$(nproc) && make install

# BUGFIX warning
RUN apt-get install -y language-pack-en-base
RUN dpkg-reconfigure locales
##-------------------------------

RUN mkdir -p /tf
RUN cd tf && git clone https://github.com/google/googletest.git
RUN mkdir -p /tf/googletest/build
RUN cd /tf/googletest/build && cmake .. && make -j$(npric) && make install
RUN rm -rf /tf

# Python
RUN apt-get install -y python3-dev python3-pip python3-tk
RUN pip3 install --upgrade pip

# Carla Simulator client
RUN pip3 install carla==0.9.15

ARG DEBIAN_FRONTEND=noninteractive
RUN apt install -y libglib2.0-0 libgl1 imagemagick 

RUN adduser --force-badname --disabled-password --gecos '' --shell /bin/bash -u 1000 out0 && \ 
	echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && \ 
	adduser out0 sudo && \ 
	adduser out0 audio && \ 
	adduser out0 video

ENV NOTVISIBLE "in users profile"
RUN echo "export VISIBLE=now" >> /etc/profile

USER out0
WORKDIR /home/out0
RUN jupyter notebook --generate-config
RUN mkdir -p /home/out0/notebooks
RUN echo "c.NotebookApp.notebook_dir=r'/home/out0/notebooks'" >> /home/out0/.jupyter/jupyter_notebook_config.py
RUN echo "c.NotebookApp.token='abc123...'" >> /home/out0/.jupyter/jupyter_notebook_config.py

RUN mkdir -p /home/out0/.jupyter/lab/user-settings/@jupyterlab/completer-extension
RUN rm -rf /home/out0/.jupyter/lab/user-settings/@jupyterlab/completer-extension/*
RUN echo "{" >> /home/out0/.jupyter/lab/user-settings/\@jupyterlab/completer-extension/manager.jupyterlab-settings
RUN echo "    \"providerTimeout\": 1000," >> /home/out0/.jupyter/lab/user-settings/\@jupyterlab/completer-extension/manager.jupyterlab-settings
RUN echo "    \"showDocumentationPanel\": false," >> /home/out0/.jupyter/lab/user-settings/\@jupyterlab/completer-extension/manager.jupyterlab-settings
RUN echo "    \"autoCompletion\": true," >> /home/out0/.jupyter/lab/user-settings/\@jupyterlab/completer-extension/manager.jupyterlab-settings
RUN echo "    \"availableProviders\": {" >> /home/out0/.jupyter/lab/user-settings/\@jupyterlab/completer-extension/manager.jupyterlab-settings
RUN echo "        \"CompletionProvider:context\": 500," >> /home/out0/.jupyter/lab/user-settings/@jupyterlab/completer-extension/manager.jupyterlab-settings
RUN echo "        \"CompletionProvider:kernel\": 550" >> /home/out0/.jupyter/lab/user-settings/\@jupyterlab/completer-extension/manager.jupyterlab-settings
RUN echo "    }" >> /home/out0/.jupyter/lab/user-settings/\@jupyterlab/completer-extension/manager.jupyterlab-settings
RUN echo "}" >> /home/out0/.jupyter/lab/user-settings/\@jupyterlab/completer-extension/manager.jupyterlab-settings


RUN export DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY

# COPY libvehiclehal /home/out0/libvehiclehal
# COPY libdrivelessfw /home/out0/libdrivelessfw

# USER root
# WORKDIR /home/out0/libdrivelessfw
# RUN make && make install
# WORKDIR /home/out0/libvehiclehal
# RUN make carla && make install

# RUN rm -rf /home/out0/libvehiclehal
# RUN rm -rf /home/out0/libdrivelessfw

# Cutless
# Architectures
# https://arnon.dk/matching-sm-architectures-arch-and-gencode-for-various-nvidia-cards/
# RTX 3060  86
# jetson TX2  62
# jetson nano 53


# #install cutless
# RUN export CUDA_INSTALL_PATH="/usr/local/cuda-11.8"
# RUN export CUDACXX=${CUDA_INSTALL_PATH}/bin/nvcc
# RUN mkdir /tf
# RUN cd /tf && git clone https://github.com/NVIDIA/cutlass.git
# RUN mkdir -p /tf/cutlass/build
# RUN cd /tf/cutlass/build && cmake .. -DCUTLASS_NVCC_ARCHS=86
# RUN cd /tf/cutlass/build && sudo make -j12
# RUN cd /tf/cutlass/build && sudo make install
# RUN rm -rf /tf


USER out0
WORKDIR /home/out0
COPY img/rebuild_libs.sh /home/out0/
RUN sudo chmod a+x /home/out0/rebuild_libs.sh

# ENV PATH=$CONDA_DIR/bin:$PATH
CMD jupyter notebook --ip 0.0.0.0 --no-browser --allow-root
# RUN echo "source /opt/ros/noetic/setup.bash" >> /home/out0/.bashrc
